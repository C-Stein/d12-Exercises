{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","../src/quiz.js"],"names":[],"mappingsfile":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\nconsole.log(\"Javascript!\");\n\n// A base Robot function.\n// Define three robot type functions (e.g. Drone, Bipedal, ATV).\n// Define at least 2 specific robot model functions for each type.\n// Give each robot model a different range of health. For example, one model can have health range of 50-80, and another one will have a range of 60-120. To accomplish this, read about the Math.random() function in JavaScript.\n// Define at least six different modifications and six different weapons that can be added to a robot.\n// Each modification should provide some combination of the following benefits - increased protection, increased damage, or evasion capability (ability to avoid some attacks).\n// Define the range of damage that each weapon can do.\n\nfunction randomRange(a, b) {\n  return Math.round(Math.random() * (b - a) + a);\n}\n\nfunction Robot() {\n  this.modification = \"\";\n  this.weapon = \"\";\n}\n\n\n///Building Drones///\nfunction Drone() {\n  this.health = randomRange(80, 120);\n}\n\nDrone.prototype = new Robot();\n\nfunction AngryBird() {\n  this.health = randomRange(80, 120);\n  this.modification = \"\";\n}\n\nAngryBird.prototype = new Drone();\n\nfunction Pegasus() {\n  this.health = randomRange(80, 120);\n}\n\nPegasus.prototype = new Drone();\n\n///Building Bipedals///\nfunction Bipedal() {\n\n}\nBipedal.prototype = new Robot();\n\nfunction Voltron() {\n  this.health = randomRange(80, 120);\n}\nVoltron.prototype = new Bipedal();\n\nfunction Cylon () {\n  this.health = randomRange(80, 120);\n}\nCylon.prototype = new Bipedal();\n\n\n///Building ATVs///\nfunction ATV() {\n\n}\nATV.prototype = new Robot();\n\nfunction Warthog() {\n  this.health = randomRange(80, 120);\n}\nWarthog.prototype = new ATV();\n\nfunction KITT() {\n  this.health = randomRange(80, 120);\n}\nKITT.prototype = new ATV();\n\n///Building Modifications///\nfunction Modification() {\n\n}\n\nfunction BattleShield () {\n  this.evasion = 0.1;\n  this.damage = 1;\n  this.protection = 1.5;\n}\nBattleShield.prototype = new Modification();\n\nfunction Spikes () {\n  this.evasion = 0.2;\n  this.damage = 1.6;\n  this.protection = 1.5;\n}\nSpikes.prototype = new Modification();\n\nfunction Sparkles () {\n  this.evasion = 0.4;\n  this.damage = 1.3;\n  this.protection = 1.2;\n}\nSparkles.prototype = new Modification();\n\nfunction Cloak () {\n  this.evasion = 0.4;\n  this.damage = 1;\n  this.protection = 1.1;\n}\nCloak.prototype = new Modification();\n\nfunction Tiara () {\n  this.evasion = 0.2;\n  this.damage = 1;\n  this.protection = 1.1;\n}\nTiara.prototype = new Modification();\n\nfunction Armor () {\n  this.evasion = 0.1;\n  this.damage = 1;\n  this.protection = 1.4;\n}\nArmor.prototype = new Modification();\n\n///Building Weapons\nfunction Weapon() {\n\n}\n\nfunction Spoon() {\n  this.damage = randomRange(15, 20);\n}\nSpoon.prototype = new Weapon();\n\nfunction Wand() {\n  this.damage = randomRange(5, 30);\n}\nWand.prototype = new Weapon();\n\nfunction LightSaber() {\n  this.damage = randomRange(20, 30);\n}\nLightSaber.prototype = new Weapon();\n\nfunction Scimitar() {\n  this.damage = randomRange(10, 20);\n}\nScimitar.prototype = new Weapon();\n\nfunction NailClippers() {\n  this.damage = randomRange(5, 15);\n}\nNailClippers.prototype = new Weapon();\n\nfunction ProtonPack() {\n  this.damage = randomRange(5, 20);\n}\nProtonPack.prototype = new Weapon();\n\n///Build Players\n\nfunction buildPlayer1() {\n  switch (player1RobotType) {\n    case \"AngryBird\":\n      player1Robot = new AngryBird();\n      break;\n    case \"Pegasus\":\n      player1Robot = new Pegasus();\n      break;\n    case \"Voltron\":\n      player1Robot = new Voltron();\n      break;\n    case \"Cylon\":\n      player1Robot = new Cylon();\n      break;\n    case \"Warthog\":\n      player1Robot = new Warthog();\n      break;\n    case \"KITT\":\n      player1Robot = new KITT();\n  }\n\n  switch (player1Modification) {\n    case \"BattleShield\":\n      player1Robot.modification = new BattleShield();\n      break;\n    case \"Spikes\":\n      player1Robot.modification = new Spikes();\n      break;\n    case \"Sparkles\":\n      player1Robot.modification = new Sparkles();\n      break;\n    case \"Cloak\":\n      player1Robot.modification = new Cloak();\n      break;\n    case \"Tiara\":\n      player1Robot.modification = new Tiara();\n      break;\n    case \"Armor\":\n      player1Robot.modification = new Armor();\n      break;\n  }\n\n  switch (player1Weapon) {\n    case \"Spoon\":\n      player1Robot.weapon = new Spoon();\n      break;\n    case \"Wand\":\n      player1Robot.weapon = new Wand();\n      break;\n    case \"LightSaber\":\n      player1Robot.weapon = new LightSaber();\n      break;\n    case \"Scimitar\":\n      player1Robot.weapon = new Scimitar();\n      break;\n    case \"NailClippers\":\n      player1Robot.weapon = new NailClippers();\n      break;\n    case \"ProtonPack\":\n      player1Robot.weapon = new ProtonPack();\n      break;\n  }\n\n  console.log(\"player1Robot\", player1Robot);\n}\n\nfunction buildPlayer2() {\n  switch (player2RobotType) {\n    case \"AngryBird\":\n      player2Robot = new AngryBird();\n      break;\n    case \"Pegasus\":\n      player2Robot = new Pegasus();\n      break;\n    case \"Voltron\":\n      player2Robot = new Voltron();\n      break;\n    case \"Cylon\":\n      player2Robot = new Cylon();\n      break;\n    case \"Warthog\":\n      player2Robot = new Warthog();\n      break;\n    case \"KITT\":\n      player2Robot = new KITT();\n  }\n\n  switch (player2Modification) {\n    case \"BattleShield\":\n      player2Robot.modification = new BattleShield();\n      break;\n    case \"Spikes\":\n      player2Robot.modification = new Spikes();\n      break;\n    case \"Sparkles\":\n      player2Robot.modification = new Sparkles();\n      break;\n    case \"Cloak\":\n      player2Robot.modification = new Cloak();\n      break;\n    case \"Tiara\":\n      player2Robot.modification = new Tiara();\n      break;\n    case \"Armor\":\n      player2Robot.modification = new Armor();\n      break;\n  }\n\n  switch (player2Weapon) {\n    case \"Spoon\":\n      player2Robot.weapon = new Spoon();\n      break;\n    case \"Wand\":\n      player2Robot.weapon = new Wand();\n      break;\n    case \"LightSaber\":\n      player2Robot.weapon = new LightSaber();\n      break;\n    case \"Scimitar\":\n      player2Robot.weapon = new Scimitar();\n      break;\n    case \"NailClippers\":\n      player2Robot.weapon = new NailClippers();\n      break;\n    case \"ProtonPack\":\n      player2Robot.weapon = new ProtonPack();\n      break;\n  }\n  console.log(\"player2Robot\", player2Robot);\n}\n\nlet player1Robot;\nlet player2Robot;\nlet player1RobotType;\nlet player1Weapon;\nlet player1Modification;\nlet player2RobotType;\nlet player2Weapon;\nlet player2Modification;\nlet player2 = false;\n\nfunction selectRobotType(e) {\n  $(\".robotType\").removeClass(\"selected\");\n  e.toggleClass(\"selected\");\n  console.log(\"robotType\", e.text());\n  $(\"#weapons\").removeClass(\"hidden\");\n  $(\".weapon\").removeClass(\"selected\");\n  return e.text();\n}\n\nfunction selectWeapon(e) {\n  $(\".weapon\").removeClass(\"selected\");\n  e.toggleClass(\"selected\");\n  console.log(\"weapon\", e.text());\n  $(\"#modifications\").removeClass(\"hidden\");\n  $(\".modification\").removeClass(\"selected\");\n  return e.text();\n}\n\nfunction selectModification(e, playerModification) {\n    $(\".modification\").removeClass(\"selected\");\n  e.toggleClass(\"selected\");\n  console.log(\"modification\", e.text());\n  return e.text();\n}\n\n$(\".robotType\").click(function() {\n  let e = $(this);\n  if(player2 === false) {\n    player1RobotType = selectRobotType(e);\n  } else {\n    player2RobotType = selectRobotType(e);\n  }\n});\n\n$(\".weapon\").click(function() {\n  let e = $(this);\n  if(player2 === false) {\n    player1Weapon = selectWeapon(e);\n  } else {\n    player2Weapon = selectWeapon(e);\n  }\n});\n\n$(\".modification\").click(function() {\n  let e = $(this);\n  if(player2 === false) {\n    player1Modification = selectModification(e);\n    $(\"#confirmPlayerOne\").removeClass(\"hidden\");\n  } else {\n    player2Modification = selectModification(e);\n    $(\"#confirmPlayerTwo\").removeClass(\"hidden\");\n  }\n});\n\n//little extra: add a \"name your robot\" field\n\n$(\"#confirmPlayerOne\").click(function() {\n  $(\"#robotTypes, #weapons, #modifications, #confirmPlayerOne\").addClass(\"hidden\");\n  $(\"#player1specs\")\n  .text(\"Player One selected a \" + player1RobotType + \" with \" + player1Modification + \" and a \" + player1Weapon + \".\");\n  $(\"#player2specs\").removeClass(\"hidden\");\n  player2 = true;\n  $(\"#robotTypes\").removeClass(\"hidden\");\n  $(\".robotType\").removeClass(\"selected\");\n  buildPlayer1();\n});\n\n$(\"#confirmPlayerTwo\").click(function() {\n  $(\"#robotTypes, #weapons, #modifications, #confirmPlayerTwo\").addClass(\"hidden\");\n  $(\"#player2specs\")\n  .text(\"Player Two selected a \" + player2RobotType + \" with \" + player2Modification + \" and a \" + player2Weapon + \".\");\n  buildPlayer2();\n  $(\"#battleButton\").removeClass(\"hidden\");\n});\n\n$(\"#battleButton\").click(function() {\n  $(\"#battleButton\").addClass(\"hidden\");\n  $(\"#roundButton\").removeClass(\"hidden\");\n  battle();\n});\n\n\n\nfunction evasion(chance)  {\n  if (Math.random() < chance) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction coinToss() {\n  if (Math.random() > 0.5) {\n    $(\"#output\").append(\"Player One won the coin toss\");\n    return 1;\n  } else {\n    $(\"#output\").append(\"Player Two won the coin toss\");\n    return 2;\n  }\n}\n\nfunction battleRound(attacker, defender) {\n  console.log(\"attacker.weapon.damage\", attacker.weapon.damage);\n  let actualDamage = attacker.weapon.damage * attacker.modification.damage;\n  if (evasion(defender.modification.evasion) === true ) {\n    //display defender has evaded attack!\n    console.log(\"Evaded attack!\");\n    $(\"#output\").append(\"<p>Defender evaded attack!</p>\");\n    return 0;\n  }\n  actualDamage = Math.round(actualDamage / defender.modification.protection);\n  console.log(\"actualDamage\", actualDamage);\n  return actualDamage;\n}\n\nfunction battle() {\n  let player1Health = player1Robot.health;\n  let player2Health = player2Robot.health;\n  $(\"#output\").append(`<p> Player 1 Starting Health: ${player1Health}</p>`);\n  $(\"#output\").append(`<p> Player 2 Starting Health: ${player2Health}</p>`);\n  let attacker = coinToss();\n  let round = 1;\n  function attack() {\n    $(\"#output\").append(`<h2>Round ${round}</h2>`);\n    if (attacker == 1) {\n      let damage = battleRound(player1Robot, player2Robot);\n      player2Health = player2Health - damage;\n      $(\"#output\").append(`<p>player 1 did ${damage} damage</p>`);\n      attacker = 2;\n    } else {\n      let damage = battleRound(player2Robot, player1Robot);\n      player1Health = player1Health - damage;\n      $(\"#output\").append(`<p>player 2 did ${damage} damage</p>`);\n      attacker = 1;\n    }\n    $(\"#output\").append(`<p> Player 1 Health: ${player1Health} and Player 2 Health: ${player2Health}</p>`);\n    round++;\n  }\n  /////////\n  attack();\n  /////////\n  $(\"#roundButton\").click(() => {\n    attack();\n    if (player1Health <= 0 || player2Health <= 0) {\n      $(\"#roundButton\").addClass('hidden');\n      if(player1Health > player2Health) {\n        $(\"#output\").append(\"<h2>Player One Wins!</h2>\");\n      } else {\n        $(\"#output\").append(\"<h2>Player Two Wins!</h2>\");\n      }\n    }\n  });\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]}